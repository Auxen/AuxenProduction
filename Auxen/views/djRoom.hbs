<div>
  <div class="row">
    <div class="col-xs-2">
      <h1 data-id="{{room.roomName}}" style="margin-left: 5%; margin-right: 5%;"class="closeRoom text-center text small boxed raise" id="closeRoom"><a href='/closeRoom/{{room.roomName}}/?roomId={{room._id}}'>Close</a></h1>
    </div>
    <div class="col-sm-offset-1 col-sm-6">
      <h1 class="text-center standard-text medium animated slideInDown">{{room.roomName}}</h1>
      <div id="djphoto" class='center'>
        <img src='{{room.imageURL}}' class="img-responsive animated wobble" style="border-radius: 50%; width: 20%; height: 20%;" >
      </div>
      <h2 class="text-center standard-text small">You are the host</h2>
    </div>
  </div>

  <div class="center">
    <h1 style=""class="text-center text small boxed raise" data-toggle="modal" data-target="#exampleModalLong">Played Songs</h1>
  </div>

  <!-- <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h2 style="color: black;"class="modal-title text-center standard-text" id="exampleModalLongTitle">Played Songs ðŸŽ‰</h2>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body lastSongs">

        </div>
        <div class="modal-footer">
          <h1 style="color: black; width: 20%; margin-right: auto; margin-left: auto;"class="text-center text small boxed raise" data-dismiss="modal">Close</h1>
        </div>
      </div>
    </div>
  </div> -->

  <div class="row">
    <div class="activeUsersforUser col-xs-offset-2">
      <div id="users" class="row">
      {{#each room.usersInRoom}}
        <div id="{{this.spotifyId}}" class="col-xs-6 col-sm-4" style="margin-top: 3%;">
            <div data-id="{{this.spotifyId}}" >
              <img class="grow raise" style="border-radius: 50%; width: 25%;" src="{{this.imageURL}}" alt="">
            </div>
        </div>
      {{/each}}
      </div>
    </div>
    <div class="col-xs-offset-4"></div>
  </div>

  <div class="center" id="flames"></div>


</div>

<script>
    var djRefreshToken = '{{room.djRefreshToken}}';
    var roomId = '{{room._id}}';
    var roomName = '{{room.roomName}}';
    var socket = io();
    var clearId = -1;

    /* Checking connnection to socket */
    socket.on('connect', function(){
      console.log('Connected!');
      if(localStorage.getItem('closing') === "true"){
        window.location.href = '/';
      }else{
        socket.emit('spotifySetup', localStorage.getItem("spotifyId"));
      }
    })

    /* Setting refresh token in localStorage and calling setInterval every 30 mins to refresh */
    socket.on('setRefreshToken', function(refreshToken){
      localStorage.setItem('refreshToken', refreshToken);
      clearId = setInterval(function () {
        socket.emit("toRefresh", localStorage.getItem("refreshToken"));
      }, 30*60000);
    });

    /* Setting access token in localStorage */
    socket.on('setAccessToken', function(accessToken){
      localStorage.setItem('accessToken', accessToken);
      var djObject = {
        roomName: roomName,
        spotifyId: localStorage.getItem('spotifyId'),
        imageURL: localStorage.getItem('imageURL'),
        refreshToken: localStorage.getItem('refreshToken'),
        accessToken: localStorage.getItem('accessToken'),
        username: localStorage.getItem('username')
      }
      socket.emit('createRoom', djObject);
    })

    /* sets new access token after refresh */
    socket.on('setNewAccessToken', function(accessToken){
      localStorage.setItem('accessToken', accessToken);
      socket.emit('changeRoomToken', {roomName: roomName, newToken: accessToken});
    })

    $(window).bind('beforeunload', function(){
      console.log("before unloading");
      return "Are you sure you want to leave? This will take you to home page";
    });

    $(window).on("unload", function(){
      console.log("unloading");
      socket.emit('specialClose', {"roomName": roomName, "roomId": roomId});
      clearInterval(clearId);
      localStorage.setItem("closing", "true");
    })

    /* some other user has left room */
    socket.on('userLeaving', function(userSpotifyId){
        console.log(userSpotifyId);
        $('#' + userSpotifyId).remove();
    });

    socket.on('laflame', function() {
      console.log('this isnt happening');
      $('#flames').append(`
          <span class="middle fire" style="position: absolute">
              ðŸ”¥
          </span>
        `)
        setTimeout(function() {
          $('#flames').find('span:first').remove();
        }, 5000)
    })

    socket.on('userSongRequest', function(data){
      $('#flames').append(`
        <p class="request small text" style="position: absolute">
            <span style="width: 30%;">${data}</span>
        </p>
      `)

      setTimeout(function() {
        $('#flames').find('p:first').remove();
      }, 8000)
    });


    /* dj closes room emits event to server which then kicks people out of the room */
    $('#closeRoom').on('click', function(event){
      console.log("reached front end destination");
      socket.emit('closingRoom', {"roomName": roomName, "roomId": roomId});
    })

    /* new user has joined */
    socket.on('userJoined', function(userData){
      console.log("userJoined", userData);
      if($('#' + userData.spotifyId)){
        console.log("not adding if user already exist");
        return;
      }else{
        console.log("user joined", userData);
         var data = `<div id="{{this.spotifyId}}" class="col-xs-6 col-sm-4" style="margin-top: 3%;">
             <div data-id="{{this.spotifyId}}" >
               <img class="grow raise" style="border-radius: 50%; width: 25%;" src="{{this.imageURL}}" alt="">
             </div>
         </div>`
         $('#users').append(data);
      }

    });


</script>
