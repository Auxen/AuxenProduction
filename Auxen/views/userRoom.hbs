<div>

  <div class="row">
    <div class="col-sm-2">
      <h1 data-id="{{room.roomName}}" style="margin-left: 5%; margin-right: 5%;"class="leaveRoom text-center text small boxed raise" id="userLeave"><a href='/leaveRoom?roomId={{room._id}}'>Leave</a></h1>
    </div>
    <div class="col-sm-offset-1 col-sm-6">
      <h1 class="text-center standard-text medium animated slideInDown">{{room.roomName}}</h1>
      <div id="djphoto" class='center'>
        <img src="{{room.imageURL}}" class="img-responsive animated wobble" style="border-radius: 50%; width: 20%; height: 20%;" >
      </div>
      <h2 class="text-center standard-text small">Host is: Yash Vadhan Nevatia</h2>
    </div>
  </div>

  <div class="center">
    <h1 style=""class="text-center text small boxed raise" data-toggle="modal" data-target="#exampleModalLong">Played Songs</h1>
  </div>

  <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h2 style="color: black;"class="modal-title text-center standard-text" id="exampleModalLongTitle">Played Songs ðŸŽ‰</h2>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body lastSongs">
        </div>
        <div class="modal-footer">
          <h1 style="color: black; width: 20%; margin-right: auto; margin-left: auto;"class="text-center text small boxed raise" data-dismiss="modal">Close</h1>
        </div>
      </div>
    </div>
  </div


  <div class="row">

    <div class="activeUsersforUser col-sm-offset-2 center">
        {{#each room.usersInRoom}}
          <div id="{{this.spotifyId}}"  style ="width: 20%">
                <img class="grow raise" style="border-radius: 50%; width: 45%; height: auto; margin-top: 5%;" src="{{this.imageURL}}" alt="">
          </div>
        {{/each}}
    </div >

    <div class="col-sm-offset-3">
    </div>

  </div>
</div>

<script>
    var roomName = '{{room.roomName}}';
    var roomId = '{{room.roomId}}';
    var socket = io();
    var clearId = -1;

    /* if user wants to leave room it comes here */
    $('#userLeave').on('click', function(event){
      //event.preventDefault();
      socket.emit('leaveRoom', localStorage.getItem("spotifyId"));
      //window.location = '/';
    })

    /* Checking connnection to socket */
    socket.on('connect', function(){
      console.log('Connected!');
      socket.emit('spotifySetup', localStorage.getItem("spotifyId"));
      socket.emit('joinRoom', roomName);

    });

    /* Setting refresh token in localStorage and calling setInterval every 30 mins to refresh */
    socket.emit('setRefreshToken', function(refreshToken){
      localStorage.setItem('refreshToken', refreshToken);
      setInterval(function () {
        socket.emit("toRefresh", localStorage.getItem("refreshToken"));
      }, 60000 * 30);
    });

    /* clearInterval for refresh token once disconnected. */
    socket.on('disconnected', function() {
      console.log("this should happen on refresh");
      if (clearId !== -1) {
        clearInterval(clearId);
        clearId = -1;
        socket.emit('leaveRoom', localStorage.getItem("spotifyId"));
        var userObject = {roomId: roomId, spotifyId:localStorage.getItem("spotifyId")}
        socket.emit('autoLeave',userObject);
      }
    })

    /* Setting access token in localStorage */
    socket.on('setAccessToken', function(accessToken){
      localStorage.setItem('accessToken', accessToken);
      var userObject = {
        roomName: roomName,
        spotifyId: localStorage.getItem('spotifyId'),
        imageURL: localStorage.getItem('imageURL'),
        username: localStorage.getItem('username')
      }
      socket.emit('joinRoom', userObject);
    });

    /* if dj closes room it will come here and redirect to home after leavingRoom */
    socket.on('roomClosed', function(){
      socket.emit('leaveRoom');
      //do an alert here about room being closed by dj
      window.location = '/';
    })

    /* new user has joined */
    socket.on('userJoined', function(userData){
      var data = `<div id="{{userData.spotifyId}}" class="center" style ="width: 20%">
                <img class="grow raise" style="border-radius: 50%;
                width: 45%; height: auto; margin-top: 5%;" src="{{userData.imageURL}}" alt="">
              </div>`
      $('.activeUsersforUser').append(data);
    })

    /* some other user has left room */
    socket.on('userLeaving', function(userSpotifyId){
      $('#' + userSpotifyId).remove();
    });

    /* get dj setting info and configure users spotify */
    socket.on('DJData', function(DJData){
      console.log("DJDATA", DJData);
      var timeProgress = DJData.timeProgress;
      var songURI = DJData.songURI;
      $.ajax({
        url: 'https://api.spotify.com/v1/me/player/play',
        method: 'PUT',
        headers: {
          'Authorization': 'Bearer ' + localStorage.getItem("accessToken"),
          'Content-Type': "application/json"
        },
        data: JSON.stringify({
          "uris": [songURI]
        }),
        dataType: "JSON",
        success: function(data){
          $.ajax({
            url: `https://api.spotify.com/v1/me/player/seek?position_ms=${timeProgress}`,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem("accessToken")
              },
            method: 'PUT',
            json: true,
            success: function (something) {
                console.log("lets go home");
            }
          })
        }
      })
    })

</script>
