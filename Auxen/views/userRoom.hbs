
<div>
  <div class="row">
    <div class="col-sm-2 col-xs-2">
      <h1 data-id="{{room.roomName}}" style="margin-left: 5%; margin-right: 5%;"class="leaveRoom text-center text small boxed raise" id="userLeave"><a href='/leaveRoom?roomId={{room._id}}'>Leave</a></h1>
    </div>
    <div class="col-sm-offset-1 col-sm-6">
      <h1 class="text-center standard-text medium animated slideInDown">{{room.roomName}}</h1>
      <div id="djphoto" class='center'>
        <img src="{{room.imageURL}}" class="img-responsive animated rollIn" style="border-radius: 50%; width: 20%; height: 20%;" >
      </div>
      <h2 class="text-center standard-text small">Host is: {{room.djName}}</h2>
    </div>
  </div>
  <div id="laflame-container">
    <h1 id="laflame" class="center floating pointer" >
      ðŸ”¥
    </h1>

  </div>
  <div class="center">
    <h1 style=""class="text-center text small boxed raise" data-toggle="modal" data-target="#exampleModalLong">Request Songs</h1>
  </div>
  <div class="row">
    <div class="activeUsersforUser col-sm-offset-2 center">
      <div id="users" class="row">
      {{#each room.usersInRoom}}
        <div id="{{this.spotifyId}}" class="col-xs-6 col-sm-4" style ="width: 15%; margin-top: 1%;">
            <div data-id="{{this.spotifyId}}" >
              <img class="grow raise" style="border-radius: 50%; width: 45%; height: auto; margin-top: 5%;" src="{{this.imageURL}}" alt="">
            </div>
        </div>
      {{/each}}

    </div>
    </div>
  </div>
</div>

  <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true" style="background-color: #1E1D1D">
    <div class="modal-dialog" role="document"  style="background-color: #1E1D1D">
      <div>
        <div class="modal-header" style="background-color: #1E1D1D">
          <h2 class="modal-title text-center standard-text" id="exampleModalLongTitle">Request a song</h2>
        </div>
        <input id="requestval" style="border: none; font-size: 20px;" placeholder="Taking song requests..." class="ghost-input"></input>
        <div class="modal-footer"  style="background-color: #1E1D1D">
          <h1 id="request" class="text-center text small boxed raise" style="width: 20%;" data-dismiss="modal">Submit</h1>
        </div>
      </div>
    </div>
  </div>

  <div class="center" id="flames"></div>


<script type="text/javascript" src="/static/scripts/float.js"></script>

<script>
    var roomName = '{{room.roomName}}';
    var roomId = '{{room.roomId}}';
    var socket = io();
    var clearId = -1;

    /* if user wants to leave room it comes here */
    $('#userLeave').on('click', function(event){
      socket.emit('leaveRoom', localStorage.getItem("spotifyId"));
    })

    /* Checking connnection to socket */
    socket.on('connect', function(){
      console.log('Connected!');
      socket.emit('spotifySetup', localStorage.getItem("spotifyId"));
    });

    /* Setting refresh token in localStorage and calling setInterval every 30 mins to refresh */
    socket.on('setRefreshToken', function(refreshToken){
      localStorage.setItem('refreshToken', refreshToken);
      clearId = setInterval(function () {
        socket.emit("toRefresh", localStorage.getItem("refreshToken"));
      }, 30*60000 );
    });

    /* Setting access token in localStorage */
    socket.on('setAccessToken', function(accessToken){
      localStorage.setItem('accessToken', accessToken);
      var userObject = {
        roomName: roomName,
        spotifyId: localStorage.getItem('spotifyId'),
        imageURL: localStorage.getItem('imageURL'),
        username: localStorage.getItem('username')
      }
      socket.emit('joinRoom', userObject);
    });

    /* sets new access token after refresh */
    socket.on('setNewAccessToken', function(accessToken){
      localStorage.setItem('accessToken', accessToken);
    })

    /* clearInterval for refresh token once disconnected. */
    // socket.on('disconnected', function() {
    //   console.log("this should happen on refresh");
    //   if (clearId !== -1) {
    //     clearInterval(clearId);
    //     clearId = -1;
    //     socket.emit('leaveRoom', localStorage.getItem("spotifyId"));
    //     var userObject = {roomId: roomId, spotifyId:localStorage.getItem("spotifyId")}
    //     socket.emit('autoLeave',userObject);
    //   }
    // })

    $(window).bind('beforeunload', function(){
      return "Are you sure you want to leave? This will take you to home page";
    });

    $(window).unload(function(){
      socket.emit('leaveRoom', localStorage.getItem("spotifyId"));
    })

    /* if dj closes room it will come here and redirect to home after leavingRoom */
    socket.on('roomClosed', function(){
      socket.emit('leaveRoom');
      alert('Sorry, the dj closed the room');
      window.location = '/';
    })

    /* new user has joined */
    socket.on('userJoined', function(userData){
      if($('#'+userData.spotifyId)){
        return;
      }else{
        console.log("user joined", userData);
         var data = `<div id="{{this.spotifyId}}" class="col-xs-6 col-sm-4" style ="width: 15%; margin-top: 1%;">
             <div data-id="{{this.spotifyId}}" >
               <img class="grow raise" style="border-radius: 50%; width: 45%; height: auto; margin-top: 5%;" src="{{this.imageURL}}" alt="">
             </div>
         </div>`
         $('#users').append(data);
      }

    });

    /* some other user has left room */
    socket.on('userLeaving', function(userSpotifyId){
      console.log("userLeaving", userSpotifyId);
      $('#' + userSpotifyId).remove();
    });

    /* get dj setting info and configure users spotify */
    socket.on('DJData', function(DJData){
      var timeProgress = DJData.timeProgress;
      var songURI = DJData.songURI;
      $.ajax({
        url: 'https://api.spotify.com/v1/me/player/play',
        method: 'PUT',
        headers: {
          'Authorization': 'Bearer ' + localStorage.getItem("accessToken"),
          'Content-Type': "application/json"
        },
        data: JSON.stringify({
          "uris": [songURI]
        }),
        dataType: "JSON",
        success: function(data){
          $.ajax({
            url: `https://api.spotify.com/v1/me/player/seek?position_ms=${timeProgress}`,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem("accessToken")
              },
            method: 'PUT',
            json: true,
            success: function (something) {
                console.log("lets go home");
            }
          })
        }
      })
    })

</script>
